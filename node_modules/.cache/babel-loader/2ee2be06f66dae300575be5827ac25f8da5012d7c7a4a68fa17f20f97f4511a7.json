{"ast":null,"code":"var _jsxFileName = \"/Users/Vishal/Documents/ANCKR Codebase/react/src/components/shared/common/SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { ButtonElement } from \"@/components\";\nimport { searchIcon } from \"@/assets/image/images\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  paramNames = \"search\",\n  onSearch,\n  placeholder,\n  extraClass\n}) => {\n  _s();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const navigate = useNavigate();\n  const url = useLocation();\n  useEffect(() => {\n    const searchParams = new URLSearchParams(url.search);\n    const query = searchParams.get(paramNames);\n    if (query) {\n      setSearchValue(query);\n    } else {\n      setSearchValue(\"\");\n    }\n  }, [url, paramNames]);\n  const handleSearch = () => {\n    const searchParams = new URLSearchParams(url.search); // Check if \"search\" parameter exists\n    if (searchParams.has(paramNames)) {\n      // If it exists, update it\n      searchParams.set(paramNames, searchValue);\n    } else {\n      // If it doesn't exist, add it\n      searchParams.append(paramNames, searchValue);\n    }\n    // Generate the updated URL\n    const updatedUrl = `${url.pathname}?${searchParams.toString()}`;\n    // Navigate to the updated URL\n    navigate(updatedUrl);\n    onSearch(searchValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `search-bar ${extraClass}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: placeholder,\n      className: \"search-input\",\n      value: searchValue,\n      onChange: e => setSearchValue(e.target.value),\n      onKeyDown: e => {\n        if (e.key === \"Enter\") {\n          handleSearch();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ButtonElement, {\n      imageUrl: searchIcon,\n      onClick: handleSearch,\n      btnClassName: \"search-btn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n_s(SearchBar, \"H4N3cTHt1voRr82MD3ukxm6UdUg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useLocation","useNavigate","useEffect","useState","ButtonElement","searchIcon","jsxDEV","_jsxDEV","SearchBar","paramNames","onSearch","placeholder","extraClass","_s","searchValue","setSearchValue","navigate","url","searchParams","URLSearchParams","search","query","get","handleSearch","has","set","append","updatedUrl","pathname","toString","className","children","value","onChange","e","target","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","imageUrl","onClick","btnClassName","_c","$RefreshReg$"],"sources":["/Users/Vishal/Documents/ANCKR Codebase/react/src/components/shared/common/SearchBar.tsx"],"sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\nimport { FC, useEffect, useState } from \"react\";\nimport { ButtonElement } from \"@/components\";\nimport { searchIcon } from \"@/assets/image/images\";\n\ninterface SearchBarProps {\n\tparamNames?: string;\n\tonSearch: (query: string) => void;\n\tplaceholder?: string;\n\textraClass?: string;\n}\n\nconst SearchBar: FC<SearchBarProps> = ({ paramNames = \"search\", onSearch, placeholder, extraClass }) => {\n\tconst [searchValue, setSearchValue] = useState<string>(\"\");\n\tconst navigate = useNavigate();\n\tconst url = useLocation();\n\n\tuseEffect(() => {\n\t\tconst searchParams = new URLSearchParams(url.search);\n\t\tconst query = searchParams.get(paramNames);\n\t\tif (query) {\n\t\t\tsetSearchValue(query);\n\t\t} else {\n\t\t\tsetSearchValue(\"\");\n\t\t}\n\t}, [url, paramNames]);\n\n\tconst handleSearch = () => {\n\t\tconst searchParams = new URLSearchParams(url.search); // Check if \"search\" parameter exists\n\t\tif (searchParams.has(paramNames)) {\n\t\t\t// If it exists, update it\n\t\t\tsearchParams.set(paramNames, searchValue);\n\t\t} else {\n\t\t\t// If it doesn't exist, add it\n\t\t\tsearchParams.append(paramNames, searchValue);\n\t\t}\n\t\t// Generate the updated URL\n\t\tconst updatedUrl = `${url.pathname}?${searchParams.toString()}`;\n\t\t// Navigate to the updated URL\n\t\tnavigate(updatedUrl);\n\t\tonSearch(searchValue);\n\t};\n\n\treturn (\n\t\t<div className={`search-bar ${extraClass}`}>\n\t\t\t<input\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tclassName=\"search-input\"\n\t\t\t\tvalue={searchValue}\n\t\t\t\tonChange={(e) => setSearchValue(e.target.value)}\n\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\t\thandleSearch();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<ButtonElement imageUrl={searchIcon} onClick={handleSearch} btnClassName=\"search-btn\" />\n\t\t</div>\n\t);\n};\n\nexport default SearchBar;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAAaC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,UAAU,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASnD,MAAMC,SAA6B,GAAGA,CAAC;EAAEC,UAAU,GAAG,QAAQ;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACvG,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAMa,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,GAAG,GAAGjB,WAAW,CAAC,CAAC;EAEzBE,SAAS,CAAC,MAAM;IACf,MAAMgB,YAAY,GAAG,IAAIC,eAAe,CAACF,GAAG,CAACG,MAAM,CAAC;IACpD,MAAMC,KAAK,GAAGH,YAAY,CAACI,GAAG,CAACb,UAAU,CAAC;IAC1C,IAAIY,KAAK,EAAE;MACVN,cAAc,CAACM,KAAK,CAAC;IACtB,CAAC,MAAM;MACNN,cAAc,CAAC,EAAE,CAAC;IACnB;EACD,CAAC,EAAE,CAACE,GAAG,EAAER,UAAU,CAAC,CAAC;EAErB,MAAMc,YAAY,GAAGA,CAAA,KAAM;IAC1B,MAAML,YAAY,GAAG,IAAIC,eAAe,CAACF,GAAG,CAACG,MAAM,CAAC,CAAC,CAAC;IACtD,IAAIF,YAAY,CAACM,GAAG,CAACf,UAAU,CAAC,EAAE;MACjC;MACAS,YAAY,CAACO,GAAG,CAAChB,UAAU,EAAEK,WAAW,CAAC;IAC1C,CAAC,MAAM;MACN;MACAI,YAAY,CAACQ,MAAM,CAACjB,UAAU,EAAEK,WAAW,CAAC;IAC7C;IACA;IACA,MAAMa,UAAU,GAAI,GAAEV,GAAG,CAACW,QAAS,IAAGV,YAAY,CAACW,QAAQ,CAAC,CAAE,EAAC;IAC/D;IACAb,QAAQ,CAACW,UAAU,CAAC;IACpBjB,QAAQ,CAACI,WAAW,CAAC;EACtB,CAAC;EAED,oBACCP,OAAA;IAAKuB,SAAS,EAAG,cAAalB,UAAW,EAAE;IAAAmB,QAAA,gBAC1CxB,OAAA;MACCI,WAAW,EAAEA,WAAY;MACzBmB,SAAS,EAAC,cAAc;MACxBE,KAAK,EAAElB,WAAY;MACnBmB,QAAQ,EAAGC,CAAC,IAAKnB,cAAc,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,SAAS,EAAGF,CAAC,IAAK;QACjB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAE;UACtBd,YAAY,CAAC,CAAC;QACf;MACD;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACFlC,OAAA,CAACH,aAAa;MAACsC,QAAQ,EAAErC,UAAW;MAACsC,OAAO,EAAEpB,YAAa;MAACqB,YAAY,EAAC;IAAY;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAER,CAAC;AAAC5B,EAAA,CA/CIL,SAA6B;EAAA,QAEjBP,WAAW,EAChBD,WAAW;AAAA;AAAA6C,EAAA,GAHlBrC,SAA6B;AAiDnC,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}