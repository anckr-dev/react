{"ast":null,"code":"var _jsxFileName = \"/Users/Vishal/Documents/ANCKR Codebase/react/src/components/customAccordian/customAccordion.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { CheckboxElement } from \"@/components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomAccordion = ({\n  isCheckbox = true,\n  onCheckboxChange,\n  sectionName,\n  checked = true,\n  content,\n  dataRequest\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleAccordionClick = event => {\n    setIsOpen(!isOpen);\n  };\n  const handleCheckbox = isChecked => {\n    if (onCheckboxChange) {\n      onCheckboxChange(isChecked);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `accordion-header-container-${checked ? \"active\" : \"inActive\"} `,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-header-button-div\",\n          children: [isCheckbox && /*#__PURE__*/_jsxDEV(CheckboxElement, {\n            initialState: checked,\n            isGreen: false,\n            onCheckboxChange: handleCheckbox,\n            wrapperClass: \"mt-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAccordionClick,\n            className: `accordion-header-btn-${checked ? \"active\" : \"inActive\"}`,\n            children: [sectionName, /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `header-btn-icon fa fa-chevron-down${isOpen ? \" rotate-icon rotated\" : \"\"}`,\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this), dataRequest ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `accordion-data-request-${checked ? \"active\" : \"inActive\"}`,\n          children: [dataRequest, \" data request\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `accordion-body-container ${isOpen ? \"show\" : \"hide\"}`,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n_s(CustomAccordion, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = CustomAccordion;\nexport default CustomAccordion;\nvar _c;\n$RefreshReg$(_c, \"CustomAccordion\");","map":{"version":3,"names":["React","useState","CheckboxElement","jsxDEV","_jsxDEV","CustomAccordion","isCheckbox","onCheckboxChange","sectionName","checked","content","dataRequest","_s","isOpen","setIsOpen","handleAccordionClick","event","handleCheckbox","isChecked","children","className","initialState","isGreen","wrapperClass","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/Vishal/Documents/ANCKR Codebase/react/src/components/customAccordian/customAccordion.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\nimport { CustomAccordionProps } from \"@/interface\";\nimport { CheckboxElement } from \"@/components\";\n\nconst CustomAccordion: FC<CustomAccordionProps> = ({\n\tisCheckbox = true,\n\tonCheckboxChange,\n\tsectionName,\n\tchecked = true,\n\tcontent,\n\tdataRequest,\n}) => {\n\tconst [isOpen, setIsOpen] = useState<boolean>(false);\n\n\tconst handleAccordionClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetIsOpen(!isOpen);\n\t};\n\n\tconst handleCheckbox = (isChecked: boolean) => {\n\t\tif (onCheckboxChange) {\n\t\t\tonCheckboxChange(isChecked);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"accordion-container\">\n\t\t\t\t<div className={`accordion-header-container-${checked ? \"active\" : \"inActive\"} `}>\n\t\t\t\t\t<div className=\"accordion-header-button-div\">\n\t\t\t\t\t\t{isCheckbox && (\n\t\t\t\t\t\t\t<CheckboxElement\n\t\t\t\t\t\t\t\tinitialState={checked}\n\t\t\t\t\t\t\t\tisGreen={false}\n\t\t\t\t\t\t\t\tonCheckboxChange={handleCheckbox}\n\t\t\t\t\t\t\t\twrapperClass=\"mt-5\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={handleAccordionClick}\n\t\t\t\t\t\t\tclassName={`accordion-header-btn-${checked ? \"active\" : \"inActive\"}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{sectionName}\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName={`header-btn-icon fa fa-chevron-down${isOpen ? \" rotate-icon rotated\" : \"\"}`}\n\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{dataRequest ? (\n\t\t\t\t\t\t<div className={`accordion-data-request-${checked ? \"active\" : \"inActive\"}`}>\n\t\t\t\t\t\t\t{dataRequest} data request\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className={`accordion-body-container ${isOpen ? \"show\" : \"hide\"}`}>{content}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CustomAccordion;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,eAAe,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAyC,GAAGA,CAAC;EAClDC,UAAU,GAAG,IAAI;EACjBC,gBAAgB;EAChBC,WAAW;EACXC,OAAO,GAAG,IAAI;EACdC,OAAO;EACPC;AACD,CAAC,KAAK;EAAAC,EAAA;EACL,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAU,KAAK,CAAC;EAEpD,MAAMc,oBAAoB,GAAIC,KAA0C,IAAK;IAC5EF,SAAS,CAAC,CAACD,MAAM,CAAC;EACnB,CAAC;EAED,MAAMI,cAAc,GAAIC,SAAkB,IAAK;IAC9C,IAAIX,gBAAgB,EAAE;MACrBA,gBAAgB,CAACW,SAAS,CAAC;IAC5B;EACD,CAAC;EAED,oBACCd,OAAA;IAAAe,QAAA,eACCf,OAAA;MAAKgB,SAAS,EAAC,qBAAqB;MAAAD,QAAA,gBACnCf,OAAA;QAAKgB,SAAS,EAAG,8BAA6BX,OAAO,GAAG,QAAQ,GAAG,UAAW,GAAG;QAAAU,QAAA,gBAChFf,OAAA;UAAKgB,SAAS,EAAC,6BAA6B;UAAAD,QAAA,GAC1Cb,UAAU,iBACVF,OAAA,CAACF,eAAe;YACfmB,YAAY,EAAEZ,OAAQ;YACtBa,OAAO,EAAE,KAAM;YACff,gBAAgB,EAAEU,cAAe;YACjCM,YAAY,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CACD,eACDvB,OAAA;YACCwB,IAAI,EAAC,QAAQ;YACbC,OAAO,EAAEd,oBAAqB;YAC9BK,SAAS,EAAG,wBAAuBX,OAAO,GAAG,QAAQ,GAAG,UAAW,EAAE;YAAAU,QAAA,GAEpEX,WAAW,eACZJ,OAAA;cACCgB,SAAS,EAAG,qCAAoCP,MAAM,GAAG,sBAAsB,GAAG,EAAG,EAAE;cACvF,eAAY;YAAM;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACLhB,WAAW,gBACXP,OAAA;UAAKgB,SAAS,EAAG,0BAAyBX,OAAO,GAAG,QAAQ,GAAG,UAAW,EAAE;UAAAU,QAAA,GAC1ER,WAAW,EAAC,eACd;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,GACH,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNvB,OAAA;QAAKgB,SAAS,EAAG,4BAA2BP,MAAM,GAAG,MAAM,GAAG,MAAO,EAAE;QAAAM,QAAA,EAAET;MAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAACf,EAAA,CAvDIP,eAAyC;AAAAyB,EAAA,GAAzCzB,eAAyC;AAyD/C,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}